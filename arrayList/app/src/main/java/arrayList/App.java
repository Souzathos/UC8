/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package arrayList;

import java.util.ArrayList;

public class App {
    
    public static void main(String[] args) {
        // Estamos declarando um arraylist que aceita strings
        ArrayList<String> nomes = new ArrayList<>();
        // Para adicionar, usamos .add(valor)
        nomes.add("athos");
        nomes.add("Decks");
        nomes.add("Bolis");
        System.out.println(nomes);
        
        // Para remover, usamos .remove(indice)
        nomes.remove(0);
        System.out.println(nomes);
        
        // O método add permite adicionar o item no indice especificado
        nomes.add(0, "Bolis");
        System.out.println(nomes);
        
        // O método .remove permite remover por valor também
        // Ele remove o primeiro item, que tiver aquele valor
        nomes.remove("Bolis");
        System.out.println(nomes);
        
        // O método .get(indice) me permite acessar um valor dentro do ArrayList
        String elemento = nomes.get(0);
        System.out.println(elemento);
        
        // O método .indexOf(valor) me permite acessar um índice dentro do ArrayList
        int indiceNome = nomes.indexOf("D2ecks");
        System.out.println(indiceNome);
        
        // O método .lastIndexOf(valor) retorna o indice do ultimo item com o valor que eu solicitei
        // Retorna -1 caso o ArrayList nao tenha este item
        int ultimoIndiceNome = nomes.lastIndexOf("Bolis");
        System.out.println(ultimoIndiceNome);
                
        // O método .set(indice, valor) permite trocar o valor de um item passando
        // o indice do item que queremos trocar, e o novo valor
        nomes.set(1, "Pedro");
        System.out.println(nomes);
        
        // O método size() retorna a quantidade doe itens do arrayList
        int tamanho = nomes.size();
        System.out.println(tamanho);
        
        // O método isEmpty() retorna 'true' se o arrayList estiver vazio
        // e retorna 'false se ele tiver algum item
        System.out.println(nomes.isEmpty());
        
        // O método contains(valor) verifica se o ArrayList tem um determinado item ou nao
        System.out.println(nomes.contains("athos"));
        
        // O método .clear() remove todos os itens do ArrayList
        nomes.clear();
        
        
    }
}
